{"ast":null,"code":"var _jsxFileName = \"/Users/sairahulpadma/Desktop/UNT/SPRING-2024/SDAI/glassclassification-frontend/src/pages/imageClassification/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Navbar2 from \"../../components/Navbar/navbar2\";\nimport TM from \"../../common/assets/form.svg\";\nimport \"./Features.css\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchBoxPlots } from \"../../services/glassclassificationservices\";\nimport { HeroBtnWrapper, ArrowForward, ArrowRight } from \"../../components/HeroSection/HeroElements\";\nimport { Button } from \"../../components/ButtonElement\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Box from \"@mui/material/Box\";\nimport { FeaturesRow, FeaturesColumn, TextWrapper, Img, TopLine, FeaturesSec, FeaturesContainer, ImgWrapper, Table, FeatureWrap } from \"./Features.elements\";\nimport Collapse from \"rc-collapse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar Panel = Collapse.Panel;\n\nrequire(\"rc-collapse/assets/index.css\");\n\nconst CreateNewContract = ({\n  lightTopLine\n}) => {\n  _s();\n\n  const [images, setImages] = useState([null, null, null]);\n  const [classifications, setClassifications] = useState([\"\", \"\", \"\"]);\n\n  const handleImageChange = index => e => {\n    const file = e.target.files[0];\n    const newImages = [...images];\n    newImages[index] = file;\n    setImages(newImages);\n    classifyImage(file, index);\n  };\n\n  const classifyImage = async (image, index) => {\n    const formData = new FormData();\n    formData.append('file', image);\n\n    try {\n      const response = await fetch('http://localhost:8001/classify', {\n        method: 'POST',\n        body: formData\n      });\n      console.lof(response);\n      const result = await response.json();\n      const newClassifications = [...classifications];\n      newClassifications[index] = result.class;\n      setClassifications(newClassifications);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FeaturesSec, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Glass Type Classification from Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: images.map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: handleImageChange(index),\n            accept: \"image/*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), classifications[index] && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Classification: \", classifications[index]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 48\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreateNewContract, \"a75E92xNCd0lR5ZgdNKsX/EuqyE=\");\n\n_c = CreateNewContract;\nexport default CreateNewContract;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNewContract\");","map":{"version":3,"sources":["/Users/sairahulpadma/Desktop/UNT/SPRING-2024/SDAI/glassclassification-frontend/src/pages/imageClassification/index.js"],"names":["React","useState","Navbar2","useEffect","useParams","fetchBoxPlots","HeroBtnWrapper","ArrowForward","ArrowRight","Button","CircularProgress","Box","FeaturesRow","FeaturesColumn","TextWrapper","Img","TopLine","FeaturesSec","FeaturesContainer","ImgWrapper","Table","FeatureWrap","Collapse","Panel","require","CreateNewContract","lightTopLine","images","setImages","classifications","setClassifications","handleImageChange","index","e","file","target","files","newImages","classifyImage","image","formData","FormData","append","response","fetch","method","body","console","lof","result","json","newClassifications","class","error","map","_"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Navbar2 from \"../../components/Navbar/navbar2\";\r\nimport TM from \"../../common/assets/form.svg\";\r\nimport \"./Features.css\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {fetchBoxPlots} from \"../../services/glassclassificationservices\"\r\nimport {\r\n  HeroBtnWrapper,\r\n  ArrowForward,\r\n  ArrowRight,\r\n} from \"../../components/HeroSection/HeroElements\";\r\nimport { Button } from \"../../components/ButtonElement\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {\r\n  FeaturesRow,\r\n  FeaturesColumn,\r\n  TextWrapper,\r\n  Img,\r\n  TopLine,\r\n  FeaturesSec,\r\n  FeaturesContainer,\r\n  ImgWrapper,\r\n  Table,\r\n  FeatureWrap,\r\n} from \"./Features.elements\";\r\nimport Collapse from \"rc-collapse\";\r\nvar Panel = Collapse.Panel;\r\nrequire(\"rc-collapse/assets/index.css\");\r\n\r\nconst CreateNewContract = ({ lightTopLine }) => {\r\n  const [images, setImages] = useState([null, null, null]);\r\n  const [classifications, setClassifications] = useState([\"\", \"\", \"\"]);\r\n  const handleImageChange = (index) => (e) => {\r\n    const file = e.target.files[0];\r\n    const newImages = [...images];\r\n    newImages[index] = file;\r\n    setImages(newImages);\r\n    classifyImage(file, index);\r\n};\r\n\r\nconst classifyImage = async (image, index) => {\r\n  const formData = new FormData();\r\n  formData.append('file', image);\r\n\r\n  try {\r\n      const response = await fetch('http://localhost:8001/classify', {\r\n          method: 'POST',\r\n          body: formData,\r\n      });\r\n     console.lof(response)\r\n      const result = await response.json();\r\n      const newClassifications = [...classifications];\r\n      newClassifications[index] = result.class;\r\n      setClassifications(newClassifications);\r\n\r\n  } catch (error) {\r\n      console.error('Error:', error);\r\n  }\r\n};\r\n\r\n \r\n\r\n\r\n  return (\r\n    <>\r\n      <Navbar2 />\r\n      <FeaturesSec>\r\n      <h1>Glass Type Classification from Images</h1>\r\n      <div>\r\n            {images.map((_, index) => (\r\n                <div key={index}>\r\n                    <input type=\"file\" onChange={handleImageChange(index)} accept=\"image/*\" />\r\n                    {classifications[index] && <p>Classification: {classifications[index]}</p>}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    </FeaturesSec>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateNewContract;\r\n"]},"metadata":{},"sourceType":"module"}