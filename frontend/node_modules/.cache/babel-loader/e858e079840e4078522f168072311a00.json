{"ast":null,"code":"var _jsxFileName = \"/Users/sairahulpadma/Desktop/partpromanagementsystem/software-engg/software-engg/FE/src/pages/DashboardComponent/DashboardNavBar/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { animateScroll as scroll } from \"react-scroll\";\nimport { Nav, NavbarContainer, NavLogo, NavMenu, NavItem, NavLinks, MobileIcon, NavSearch, NavBtn, NavBtnLink } from \"./NavbarElements\";\nimport { FaBars, FaSearch, FaMapMarkerAlt } from \"react-icons/fa\";\nimport { useNavigate } from \"react-router-dom\";\nimport LogoTM from \"../../../common/assets/untlogo.png\";\nimport DashboardServices from \"../../../services/DashboardServices\";\nimport { GlobalStateContext } from '../../../GlobalStateContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Navbar = ({\n  toggle\n}) => {\n  _s();\n\n  const [state, dispatch] = useContext(GlobalStateContext);\n  const [location, setLocation] = useState('');\n  const navigate = useNavigate();\n  const [scrollNav, setScrollNav] = useState(false);\n\n  const changeNav = () => {\n    if (window.scrollY >= 80) {\n      setScrollNav(true);\n    } else {\n      setScrollNav(false);\n    }\n  };\n\n  const getLocationDetails = () => {\n    DashboardServices.getLocationDetails(\"rahul_padma\").then(response => {\n      console.log(\"lll\", response.data);\n      const locationresp = response.data.address + \" OPENS FROM \" + response.data.operatingHrs;\n      setLocation(locationresp);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    getLocationDetails();\n    window.addEventListener('scroll', changeNav);\n  }, []);\n\n  const toggleHome = () => {\n    scroll.scrollToTop();\n  };\n\n  const handleAddVehicleDetails = e => {\n    e.preventDefault();\n    navigate(\"/addvehicledetails\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Nav, {\n      scrollNav: scrollNav,\n      children: /*#__PURE__*/_jsxDEV(NavbarContainer, {\n        children: [/*#__PURE__*/_jsxDEV(NavLogo, {\n          onClick: toggleHome,\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: LogoTM,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MobileIcon, {\n          onClick: toggle,\n          children: /*#__PURE__*/_jsxDEV(FaBars, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavMenu, {\n          children: [/*#__PURE__*/_jsxDEV(NavItem, {\n            children: /*#__PURE__*/_jsxDEV(NavSearch, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Search...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FaSearch, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n            children: /*#__PURE__*/_jsxDEV(NavLinks, {\n              onClick: event => handleAddVehicleDetails(event),\n              smooth: true,\n              duration: 500,\n              spy: true,\n              exact: \"true\",\n              offset: -80,\n              children: \"Add Vehicle Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n          children: [/*#__PURE__*/_jsxDEV(FaMapMarkerAlt, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(NavLinks, {\n            to: \"/location-details\",\n            children: location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Navbar, \"PnPlJCGSXLtJ8/1PMMTBgim+byo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/sairahulpadma/Desktop/partpromanagementsystem/software-engg/software-engg/FE/src/pages/DashboardComponent/DashboardNavBar/index.js"],"names":["React","useEffect","useState","useContext","animateScroll","scroll","Nav","NavbarContainer","NavLogo","NavMenu","NavItem","NavLinks","MobileIcon","NavSearch","NavBtn","NavBtnLink","FaBars","FaSearch","FaMapMarkerAlt","useNavigate","LogoTM","DashboardServices","GlobalStateContext","Navbar","toggle","state","dispatch","location","setLocation","navigate","scrollNav","setScrollNav","changeNav","window","scrollY","getLocationDetails","then","response","console","log","data","locationresp","address","operatingHrs","catch","error","addEventListener","toggleHome","scrollToTop","handleAddVehicleDetails","e","preventDefault","event"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useContext} from \"react\";\nimport { animateScroll as scroll } from \"react-scroll\";\nimport {\n  Nav,\n  NavbarContainer,\n  NavLogo,\n  NavMenu,\n  NavItem,\n  NavLinks,\n  MobileIcon,\n  NavSearch,\n  NavBtn,\n  NavBtnLink,\n} from \"./NavbarElements\";\nimport { FaBars ,FaSearch,FaMapMarkerAlt} from \"react-icons/fa\";\nimport { useNavigate } from \"react-router-dom\";\nimport LogoTM from \"../../../common/assets/untlogo.png\";\nimport DashboardServices from \"../../../services/DashboardServices\";\nimport { GlobalStateContext } from '../../../GlobalStateContext';\n\nconst Navbar = ({ toggle }) => {\n    const [state, dispatch] = useContext(GlobalStateContext);\n    const [location, setLocation]= useState('')\n  const navigate=useNavigate();\n  const [scrollNav, setScrollNav] = useState(false)\n  const changeNav = () => {\n    if(window.scrollY >= 80){\n      setScrollNav(true)\n    }\n    else{\n      setScrollNav(false)\n    }\n  }\n  const getLocationDetails =()=>{\n    DashboardServices.getLocationDetails(\"rahul_padma\").then(response => {\n        console.log(\"lll\",response.data)\n        const locationresp= response.data.address + \" OPENS FROM \" + response.data.operatingHrs\n        setLocation(locationresp);\n    }).catch(error => {\n        console.log(error)\n    })\n  }\n\n  useEffect(() => {\n    getLocationDetails();\n    window.addEventListener('scroll', changeNav)\n  },[]);\n\n  const toggleHome = () => {\n    scroll.scrollToTop()\n  }\n\n  const handleAddVehicleDetails=(e)=>\n  {\n    e.preventDefault()\n    navigate(\"/addvehicledetails\");\n  }\n\n  return (\n    <>\n      <Nav scrollNav={scrollNav}>\n        <NavbarContainer>\n          <NavLogo onClick={toggleHome} to=\"/\">\n            <img src={LogoTM} alt=\"\" />\n          </NavLogo>\n          <MobileIcon onClick={toggle}>\n            <FaBars />\n          </MobileIcon>\n          <NavMenu>\n          <NavItem>\n              <NavSearch>\n                <input type=\"text\" placeholder=\"Search...\" />\n                <FaSearch />\n              </NavSearch>\n            </NavItem>\n            <NavItem>\n            <NavLinks  onClick={event => handleAddVehicleDetails(event)}smooth={true} duration={500} spy={true} exact='true' offset={-80} >Add Vehicle Information</NavLinks>\n            </NavItem>\n          </NavMenu>\n          <NavItem>\n          <FaMapMarkerAlt />\n          <NavLinks to=\"/location-details\">{location}</NavLinks>\n        </NavItem>\n        </NavbarContainer>\n      </Nav>\n    </>\n  );\n};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}