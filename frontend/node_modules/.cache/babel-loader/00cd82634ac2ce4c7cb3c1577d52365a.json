{"ast":null,"code":"var _jsxFileName = \"/Users/sairahulpadma/Desktop/temp/partpro/frontend/src/GlobalStateContext.js\",\n    _s = $RefreshSig$();\n\n// GlobalStateContext.js\nimport React, { createContext, useReducer, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GlobalStateContext = /*#__PURE__*/createContext(); // Helper function to load state from localStorage\n\nconst loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('globalState');\n\n    if (serializedState === null) {\n      return initialState;\n    }\n\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return initialState;\n  }\n}; // Helper function to save state to localStorage\n\n\nconst saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('globalState', serializedState);\n  } catch (err) {// Log or handle write errors\n  }\n};\n\nconst initialState = {\n  // Initialize your state here\n  userData: null,\n  otherData: null,\n  employeeData: null,\n  cart: []\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_USER_DATA':\n      return { ...state,\n        userData: action.payload\n      };\n\n    case 'EMPLOYEE_DATA':\n      return { ...state,\n        employeeData: action.payload\n      };\n\n    case 'SET_OTHER_DATA':\n      return { ...state,\n        otherData: action.payload\n      };\n\n    case 'ADD_TO_CART':\n      return { ...state,\n        cart: [...state.cart, action.payload]\n      };\n\n    case 'REMOVE_FROM_CART':\n      return { ...state,\n        cart: state.cart.filter(item => item.id !== action.payload)\n      };\n\n    case 'INCREASE_QUANTITY':\n      return { ...state,\n        cart: state.cart.map(item => item.id === action.payload ? { ...item,\n          quantity: item.quantity + 1\n        } : item)\n      };\n\n    case 'DECREASE_QUANTITY':\n      return { ...state,\n        cart: state.cart.map(item => item.id === action.payload && item.quantity > 1 ? { ...item,\n          quantity: item.quantity - 1\n        } : item)\n      };\n\n    case 'CLEAR_CART':\n      return { ...state,\n        cart: []\n      };\n\n    case 'CLEAR_EMPLOYEE':\n      return { ...state,\n        employeeData: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const GlobalStateProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, loadState()); // Update localStorage when state changes\n\n  useEffect(() => {\n    saveState(state);\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(GlobalStateContext.Provider, {\n    value: [state, dispatch],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GlobalStateProvider, \"EMjByVSPgP/WrgFIbmSJi2VQ39o=\");\n\n_c = GlobalStateProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalStateProvider\");","map":{"version":3,"sources":["/Users/sairahulpadma/Desktop/temp/partpro/frontend/src/GlobalStateContext.js"],"names":["React","createContext","useReducer","useEffect","GlobalStateContext","loadState","serializedState","localStorage","getItem","initialState","JSON","parse","err","saveState","state","stringify","setItem","userData","otherData","employeeData","cart","reducer","action","type","payload","filter","item","id","map","quantity","GlobalStateProvider","children","dispatch"],"mappings":"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","sourcesContent":["// GlobalStateContext.js\nimport React, { createContext, useReducer,useEffect } from 'react';\n\nexport const GlobalStateContext = createContext();\n\n// Helper function to load state from localStorage\nconst loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('globalState');\n    if (serializedState === null) {\n      return initialState;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return initialState;\n  }\n};\n\n// Helper function to save state to localStorage\nconst saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('globalState', serializedState);\n  } catch (err) {\n    // Log or handle write errors\n  }\n};\n\n\nconst initialState = {\n  // Initialize your state here\n  userData: null,\n  otherData: null,\n  employeeData: null,\n  cart: []\n};\n\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_USER_DATA':\n      return { ...state, userData: action.payload };\n    case 'EMPLOYEE_DATA':\n      return { ...state, employeeData: action.payload };\n    case 'SET_OTHER_DATA':\n      return { ...state, otherData: action.payload };\n      case 'ADD_TO_CART':\n      return { ...state, cart: [...state.cart, action.payload] };\n    case 'REMOVE_FROM_CART':\n      return { ...state, cart: state.cart.filter(item => item.id !== action.payload) };\n    case 'INCREASE_QUANTITY':\n      return { ...state, cart: state.cart.map(item => item.id === action.payload ? { ...item, quantity: item.quantity + 1 } : item) };\n    case 'DECREASE_QUANTITY':\n      return { ...state, cart: state.cart.map(item => item.id === action.payload && item.quantity > 1 ? { ...item, quantity: item.quantity - 1 } : item) };\n    case 'CLEAR_CART':\n      return { ...state, cart: [] };\n    case 'CLEAR_EMPLOYEE':\n      return {...state, employeeData: []};\n    default:\n      return state;\n  }\n};\n\nexport const GlobalStateProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, loadState());\n\n\n   // Update localStorage when state changes\n   useEffect(() => {\n    saveState(state);\n  }, [state]);\n\n  return (\n    <GlobalStateContext.Provider value={[state, dispatch]}>\n      {children}\n    </GlobalStateContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}