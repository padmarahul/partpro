{"ast":null,"code":"var _jsxFileName = \"/Users/sairahulpadma/Desktop/UNT/SPRING-2024/SDAI/glassclassification-frontend/src/pages/textClassification/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Navbar2 from \"../../components/Navbar/navbar2\";\nimport TM from \"../../common/assets/form.svg\";\nimport \"./Features.css\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchBoxPlots } from \"../../services/glassclassificationservices\";\nimport { HeroBtnWrapper, ArrowForward, ArrowRight } from \"../../components/HeroSection/HeroElements\";\nimport { Button } from \"../../components/ButtonElement\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Box from \"@mui/material/Box\";\nimport { FeaturesRow, FeaturesColumn, TextWrapper, Img, TopLine, FeaturesSec, FeaturesContainer, ImgWrapper, Table, FeatureWrap } from \"./Features.elements\";\nimport Collapse from \"rc-collapse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar Panel = Collapse.Panel;\n\nrequire(\"rc-collapse/assets/index.css\");\n\nconst TextClassification = ({\n  lightTopLine\n}) => {\n  _s();\n\n  const [text, setText] = useState('');\n  const [classification, setClassification] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch('http://localhost:8001/ml/classify-text', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          description: text\n        })\n      });\n      const result = await response.json();\n      setClassification(result.class[0]);\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Failed to classify the text.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FeaturesSec, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Glass Type Classification from Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-classification-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"text-input\",\n            value: text,\n            onChange: e => setText(e.target.value),\n            placeholder: \"Enter glass description here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"classify-button\",\n            children: \"Classify\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), classification && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"classification-result\",\n          children: [\"Classification: \", classification]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TextClassification, \"YZCBJHuG17ItlBP7yiJnS1enIRs=\");\n\n_c = TextClassification;\nexport default TextClassification;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextClassification\");","map":{"version":3,"sources":["/Users/sairahulpadma/Desktop/UNT/SPRING-2024/SDAI/glassclassification-frontend/src/pages/textClassification/index.js"],"names":["React","useState","Navbar2","useEffect","useParams","fetchBoxPlots","HeroBtnWrapper","ArrowForward","ArrowRight","Button","CircularProgress","Box","FeaturesRow","FeaturesColumn","TextWrapper","Img","TopLine","FeaturesSec","FeaturesContainer","ImgWrapper","Table","FeatureWrap","Collapse","Panel","require","TextClassification","lightTopLine","text","setText","classification","setClassification","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","description","result","json","class","error","console","alert","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,iCAApB;;AAEA,OAAO,gBAAP;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAAQC,aAAR,QAA4B,4CAA5B;AACA,SACEC,cADF,EAEEC,YAFF,EAGEC,UAHF,QAIO,2CAJP;AAKA,SAASC,MAAT,QAAuB,gCAAvB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,SACEC,WADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,GAJF,EAKEC,OALF,EAMEC,WANF,EAOEC,iBAPF,EAQEC,UARF,EASEC,KATF,EAUEC,WAVF,QAWO,qBAXP;AAYA,OAAOC,QAAP,MAAqB,aAArB;;;AACA,IAAIC,KAAK,GAAGD,QAAQ,CAACC,KAArB;;AACAC,OAAO,CAAC,8BAAD,CAAP;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAAA;;AAC/C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB3B,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAC4B,cAAD,EAAiBC,iBAAjB,IAAsC7B,QAAQ,CAAC,EAAD,CAApD;;AAEA,QAAM8B,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAD,EAA2C;AACnEC,QAAAA,MAAM,EAAE,MAD2D;AAEnEC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAF0D;AAGnEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,WAAW,EAAEd;AAAf,SAAf;AAH6D,OAA3C,CAA5B;AAMA,YAAMe,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAArB;AACAb,MAAAA,iBAAiB,CAACY,MAAM,CAACE,KAAP,CAAa,CAAb,CAAD,CAAjB;AACH,KATD,CASE,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACAE,MAAAA,KAAK,CAAC,8BAAD,CAAL;AACH;AACJ,GAfD;;AAiBA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA,gCACM;AAAM,UAAA,QAAQ,EAAEhB,YAAhB;AAAA,kCACI;AACI,YAAA,SAAS,EAAC,YADd;AAEI,YAAA,KAAK,EAAEJ,IAFX;AAGI,YAAA,QAAQ,EAAGK,CAAD,IAAOJ,OAAO,CAACI,CAAC,CAACgB,MAAF,CAASC,KAAV,CAH5B;AAII,YAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAOI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADN,EAUOpB,cAAc,iBAAI;AAAG,UAAA,SAAS,EAAC,uBAAb;AAAA,yCAAsDA,cAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVzB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAqBD,CA1CD;;GAAMJ,kB;;KAAAA,kB;AA4CN,eAAeA,kBAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Navbar2 from \"../../components/Navbar/navbar2\";\r\nimport TM from \"../../common/assets/form.svg\";\r\nimport \"./Features.css\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {fetchBoxPlots} from \"../../services/glassclassificationservices\"\r\nimport {\r\n  HeroBtnWrapper,\r\n  ArrowForward,\r\n  ArrowRight,\r\n} from \"../../components/HeroSection/HeroElements\";\r\nimport { Button } from \"../../components/ButtonElement\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {\r\n  FeaturesRow,\r\n  FeaturesColumn,\r\n  TextWrapper,\r\n  Img,\r\n  TopLine,\r\n  FeaturesSec,\r\n  FeaturesContainer,\r\n  ImgWrapper,\r\n  Table,\r\n  FeatureWrap,\r\n} from \"./Features.elements\";\r\nimport Collapse from \"rc-collapse\";\r\nvar Panel = Collapse.Panel;\r\nrequire(\"rc-collapse/assets/index.css\");\r\n\r\nconst TextClassification = ({ lightTopLine }) => {\r\n  const [text, setText] = useState('');\r\n  const [classification, setClassification] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      try {\r\n          const response = await fetch('http://localhost:8001/ml/classify-text', {\r\n              method: 'POST',\r\n              headers: {'Content-Type': 'application/json'},\r\n              body: JSON.stringify({ description: text })\r\n          });\r\n\r\n          const result = await response.json();\r\n          setClassification(result.class[0]);\r\n      } catch (error) {\r\n          console.error('Error:', error);\r\n          alert('Failed to classify the text.');\r\n      }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar2 />\r\n      <FeaturesSec>\r\n      <h1>Glass Type Classification from Images</h1>\r\n      <div className=\"text-classification-container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <textarea \r\n                    className=\"text-input\" \r\n                    value={text} \r\n                    onChange={(e) => setText(e.target.value)} \r\n                    placeholder=\"Enter glass description here...\"\r\n                />\r\n                <button type=\"submit\" className=\"classify-button\">Classify</button>\r\n            </form>\r\n            {classification && <p className=\"classification-result\">Classification: {classification}</p>}\r\n        </div>\r\n\r\n    </FeaturesSec>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextClassification;\r\n"]},"metadata":{},"sourceType":"module"}