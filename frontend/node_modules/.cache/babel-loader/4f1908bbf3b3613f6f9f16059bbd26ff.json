{"ast":null,"code":"var _jsxFileName = \"/Users/sairahulpadma/Desktop/UNT/SPRING-2024/SDAI/glassclassification-frontend/src/pages/imageClassification/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Navbar2 from \"../../components/Navbar/navbar2\";\nimport TM from \"../../common/assets/form.svg\";\nimport \"./Features.css\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchBoxPlots } from \"../../services/glassclassificationservices\";\nimport { HeroBtnWrapper, ArrowForward, ArrowRight } from \"../../components/HeroSection/HeroElements\";\nimport { Button } from \"../../components/ButtonElement\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Box from \"@mui/material/Box\";\nimport { FeaturesRow, FeaturesColumn, TextWrapper, Img, TopLine, FeaturesSec, FeaturesContainer, ImgWrapper, Table, FeatureWrap } from \"./Features.elements\";\nimport Collapse from \"rc-collapse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar Panel = Collapse.Panel;\n\nrequire(\"rc-collapse/assets/index.css\");\n\nconst ImageClassification = ({\n  lightTopLine\n}) => {\n  _s();\n\n  const [image, setImage] = useState(null);\n  const [imageUrl, setImageUrl] = useState(null);\n  const [classification, setClassification] = useState(\"\");\n\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    setImage(file);\n    setImageUrl(URL.createObjectURL(file));\n    classifyImage(file);\n  };\n\n  const classifyImage = async image => {\n    const formData = new FormData();\n    formData.append('file', image);\n\n    try {\n      const response = await fetch('http://localhost:8001/ml/classify', {\n        method: 'POST',\n        body: formData\n      });\n      const result = await response.json();\n      setClassification(result.class);\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Failed to classify the image.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FeaturesSec, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Glass Type Classification from Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleImageChange,\n          accept: \"image/*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl,\n          alt: \"Uploaded\",\n          style: {\n            maxWidth: '600px',\n            maxHeight: '600px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), classification && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Classification: \", classification]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ImageClassification, \"Sa94ghcoXj3DtzV9+exEvY3Ccg8=\");\n\n_c = ImageClassification;\nexport default ImageClassification;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageClassification\");","map":{"version":3,"sources":["/Users/sairahulpadma/Desktop/UNT/SPRING-2024/SDAI/glassclassification-frontend/src/pages/imageClassification/index.js"],"names":["React","useState","Navbar2","useEffect","useParams","fetchBoxPlots","HeroBtnWrapper","ArrowForward","ArrowRight","Button","CircularProgress","Box","FeaturesRow","FeaturesColumn","TextWrapper","Img","TopLine","FeaturesSec","FeaturesContainer","ImgWrapper","Table","FeatureWrap","Collapse","Panel","require","ImageClassification","lightTopLine","image","setImage","imageUrl","setImageUrl","classification","setClassification","handleImageChange","e","file","target","files","URL","createObjectURL","classifyImage","formData","FormData","append","response","fetch","method","body","result","json","class","error","console","alert","maxWidth","maxHeight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Navbar2 from \"../../components/Navbar/navbar2\";\r\nimport TM from \"../../common/assets/form.svg\";\r\nimport \"./Features.css\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {fetchBoxPlots} from \"../../services/glassclassificationservices\"\r\nimport {\r\n  HeroBtnWrapper,\r\n  ArrowForward,\r\n  ArrowRight,\r\n} from \"../../components/HeroSection/HeroElements\";\r\nimport { Button } from \"../../components/ButtonElement\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {\r\n  FeaturesRow,\r\n  FeaturesColumn,\r\n  TextWrapper,\r\n  Img,\r\n  TopLine,\r\n  FeaturesSec,\r\n  FeaturesContainer,\r\n  ImgWrapper,\r\n  Table,\r\n  FeatureWrap,\r\n} from \"./Features.elements\";\r\nimport Collapse from \"rc-collapse\";\r\nvar Panel = Collapse.Panel;\r\nrequire(\"rc-collapse/assets/index.css\");\r\n\r\nconst ImageClassification = ({ lightTopLine }) => {\r\n  const [image, setImage] = useState(null);\r\n  const [imageUrl, setImageUrl] = useState(null);\r\n  const [classification, setClassification] = useState(\"\");\r\n\r\n  const handleImageChange = (e) => {\r\n      const file = e.target.files[0];\r\n      setImage(file);\r\n      setImageUrl(URL.createObjectURL(file));\r\n      classifyImage(file);\r\n  };\r\n\r\n  const classifyImage = async (image) => {\r\n    const formData = new FormData();\r\n    formData.append('file', image);\r\n\r\n    try {\r\n        const response = await fetch('http://localhost:8001/ml/classify', {\r\n            method: 'POST',\r\n            body: formData,\r\n        });\r\n\r\n        const result = await response.json();\r\n        setClassification(result.class);\r\n    } catch (error) {\r\n        console.error('Error:', error);\r\n        alert('Failed to classify the image.');\r\n    }\r\n};\r\n\r\n \r\n\r\n\r\n  return (\r\n    <>\r\n      <Navbar2 />\r\n      <FeaturesSec>\r\n      <h1>Glass Type Classification from Images</h1>\r\n      <div>\r\n            <input type=\"file\" onChange={handleImageChange} accept=\"image/*\" />\r\n            {imageUrl && <img src={imageUrl} alt=\"Uploaded\" style={{ maxWidth: '600px', maxHeight: '600px' }} />}\r\n            <br> </br>\r\n            <br> </br>\r\n            <br> </br>\r\n            <br> </br>\r\n            {classification && <p>Classification: {classification}</p>}\r\n        </div>\r\n\r\n    </FeaturesSec>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageClassification;\r\n"]},"metadata":{},"sourceType":"module"}