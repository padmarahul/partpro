{"ast":null,"code":"var _jsxFileName = \"/Users/sairahulpadma/Downloads/smartcontract/smfrontend/frontend-tm-smartcontract/src/pages/createContract/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Navbar2 from \"../../components/Navbar/navbar2\";\nimport TM from \"../../common/assets/form.svg\";\nimport \"./Features.css\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchBoxPlots } from \"../../services/glassclassificationservices\";\nimport { HeroBtnWrapper, ArrowForward, ArrowRight } from \"../../components/HeroSection/HeroElements\";\nimport { Button } from \"../../components/ButtonElement\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Box from \"@mui/material/Box\";\nimport { FeaturesRow, FeaturesColumn, TextWrapper, Img, TopLine, FeaturesSec, FeaturesContainer, ImgWrapper, Table, FeatureWrap } from \"./Features.elements\";\nimport Collapse from \"rc-collapse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar Panel = Collapse.Panel;\n\nrequire(\"rc-collapse/assets/index.css\");\n\nconst CreateNewContract = ({\n  lightTopLine\n}) => {\n  _s();\n\n  const params = useParams();\n  const [hover, setHover] = useState(false);\n  const [imageSrc, setImageSrc] = useState(null);\n  const [loading, setLoading] = useState(true);\n  console.log(\"param details\", params[\"param\"]);\n\n  const onHover = () => {\n    setHover(!hover);\n  };\n\n  useEffect(() => {\n    // Fetch image from the server\n    if (params[\"param\"] == 'pairplots') {\n      fetch('http://localhost:8001/ml/boxplot').then(response => response.blob()).then(blob => {\n        // Convert the Blob to a data URL\n        const objectURL = URL.createObjectURL(blob);\n        setImageSrc(objectURL);\n        setLoading(false);\n      }).catch(error => console.error('Error fetching image:', error));\n    }\n\n    if (params[\"param\"] == 'heatmaps') {\n      fetch('http://localhost:8001/ml/boxplot').then(response => response.blob()).then(blob => {\n        // Convert the Blob to a data URL\n        const objectURL = URL.createObjectURL(blob);\n        setImageSrc(objectURL);\n        setLoading(false);\n      }).catch(error => console.error('Error fetching image:', error));\n    }\n\n    if (params[\"param\"] == 'distributionplots') {\n      fetch('http://localhost:8001/ml/boxplot').then(response => response.blob()).then(blob => {\n        // Convert the Blob to a data URL\n        const objectURL = URL.createObjectURL(blob);\n        setImageSrc(objectURL);\n        setLoading(false);\n      }).catch(error => console.error('Error fetching image:', error));\n    }\n\n    if (params[\"param\"] == 'boxplots') {\n      fetch('http://localhost:8001/ml/trainconfusionmatrix').then(response => response.blob()).then(blob => {\n        // Convert the Blob to a data URL\n        const objectURL = URL.createObjectURL(blob);\n        setImageSrc(objectURL);\n        setLoading(false);\n      }).catch(error => console.error('Error fetching image:', error));\n    }\n\n    if (params[\"param\"] == 'barplots') {\n      fetch('http://localhost:8001/ml/testconfusionmatrix').then(response => response.blob()).then(blob => {\n        // Convert the Blob to a data URL\n        const objectURL = URL.createObjectURL(blob);\n        setImageSrc(objectURL);\n        setLoading(false);\n      }).catch(error => console.error('Error fetching image:', error));\n    }\n  }, []);\n  let appContent;\n\n  if (params[\"param\"] == 'testingset') {\n    appContent = /*#__PURE__*/_jsxDEV(FeaturesRow, {\n      children: /*#__PURE__*/_jsxDEV(TopLine, {\n        lightTopLine: lightTopLine,\n        children: [\"Confusion Matrix for Testing Set\", /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"grey\",\n            fontSize: \"2vh\",\n            marginTop: \"2vh\"\n          },\n          children: \"Visualization using HeatMaps for training set\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 3\n    }, this);\n  }\n\n  if (params[\"param\"] == 'trainingset') {\n    appContent = /*#__PURE__*/_jsxDEV(FeaturesRow, {\n      children: /*#__PURE__*/_jsxDEV(TopLine, {\n        lightTopLine: lightTopLine,\n        children: [\"Confusion Matrix for Training Set\", /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"grey\",\n            fontSize: \"2vh\",\n            marginTop: \"2vh\"\n          },\n          children: \"Visualization using HeatMaps for testing set\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 1\n    }, this);\n  }\n\n  if (params[\"param\"] == 'accuracy') {\n    appContent = /*#__PURE__*/_jsxDEV(FeaturesRow, {\n      children: /*#__PURE__*/_jsxDEV(TopLine, {\n        lightTopLine: lightTopLine,\n        children: [\"Performance of various ML models\", /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"grey\",\n            fontSize: \"2vh\",\n            marginTop: \"2vh\"\n          },\n          children: \"Performance Visualization using  Box Plots for Different models\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 1\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FeaturesSec, {\n      children: [appContent, loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"auto\",\n          top: \"50%\",\n          display: \"block\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\"\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: imageSrc && /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            \"width\": \"1100px\",\n            \"height\": \"1100px\"\n          },\n          src: imageSrc,\n          alt: \"Class Counts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreateNewContract, \"NBX7JJAkfOiRtm9YBo3PAPoImss=\", false, function () {\n  return [useParams];\n});\n\n_c = CreateNewContract;\nexport default CreateNewContract;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNewContract\");","map":{"version":3,"sources":["/Users/sairahulpadma/Downloads/smartcontract/smfrontend/frontend-tm-smartcontract/src/pages/createContract/index.js"],"names":["React","useState","Navbar2","useEffect","useParams","fetchBoxPlots","HeroBtnWrapper","ArrowForward","ArrowRight","Button","CircularProgress","Box","FeaturesRow","FeaturesColumn","TextWrapper","Img","TopLine","FeaturesSec","FeaturesContainer","ImgWrapper","Table","FeatureWrap","Collapse","Panel","require","CreateNewContract","lightTopLine","params","hover","setHover","imageSrc","setImageSrc","loading","setLoading","console","log","onHover","fetch","then","response","blob","objectURL","URL","createObjectURL","catch","error","appContent","color","fontSize","marginTop","margin","top","display"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,iCAApB;;AAEA,OAAO,gBAAP;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAAQC,aAAR,QAA4B,4CAA5B;AACA,SACEC,cADF,EAEEC,YAFF,EAGEC,UAHF,QAIO,2CAJP;AAKA,SAASC,MAAT,QAAuB,gCAAvB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,SACEC,WADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,GAJF,EAKEC,OALF,EAMEC,WANF,EAOEC,iBAPF,EAQEC,UARF,EASEC,KATF,EAUEC,WAVF,QAWO,qBAXP;AAYA,OAAOC,QAAP,MAAqB,aAArB;;;AACA,IAAIC,KAAK,GAAGD,QAAQ,CAACC,KAArB;;AACAC,OAAO,CAAC,8BAAD,CAAP;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAAA;;AAC9C,QAAMC,MAAM,GAAGvB,SAAS,EAAxB;AACA,QAAM,CAACwB,KAAD,EAAQC,QAAR,IAAoB5B,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAAC6B,QAAD,EAAWC,WAAX,IAA0B9B,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAAC+B,OAAD,EAAUC,UAAV,IAAwBhC,QAAQ,CAAC,IAAD,CAAtC;AACAiC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BR,MAAM,CAAC,OAAD,CAAnC;;AACA,QAAMS,OAAO,GAAG,MAAM;AACpBP,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACD,GAFD;;AAIDzB,EAAAA,SAAS,CAAC,MAAM;AACf;AACA,QAAGwB,MAAM,CAAC,OAAD,CAAN,IAAiB,WAApB,EACA;AACAU,MAAAA,KAAK,CAAC,kCAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQE,IAAI,IAAI;AACZ;AACA,cAAMC,SAAS,GAAGC,GAAG,CAACC,eAAJ,CAAoBH,IAApB,CAAlB;AACAT,QAAAA,WAAW,CAACU,SAAD,CAAX;AACAR,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAPH,EAQGW,KARH,CAQSC,KAAK,IAAIX,OAAO,CAACW,KAAR,CAAc,uBAAd,EAAuCA,KAAvC,CARlB;AASC;;AACD,QAAGlB,MAAM,CAAC,OAAD,CAAN,IAAiB,UAApB,EACA;AACAU,MAAAA,KAAK,CAAC,kCAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQE,IAAI,IAAI;AACZ;AACA,cAAMC,SAAS,GAAGC,GAAG,CAACC,eAAJ,CAAoBH,IAApB,CAAlB;AACAT,QAAAA,WAAW,CAACU,SAAD,CAAX;AACAR,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAPH,EAQGW,KARH,CAQSC,KAAK,IAAIX,OAAO,CAACW,KAAR,CAAc,uBAAd,EAAuCA,KAAvC,CARlB;AASC;;AACD,QAAGlB,MAAM,CAAC,OAAD,CAAN,IAAiB,mBAApB,EACA;AACAU,MAAAA,KAAK,CAAC,kCAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQE,IAAI,IAAI;AACZ;AACA,cAAMC,SAAS,GAAGC,GAAG,CAACC,eAAJ,CAAoBH,IAApB,CAAlB;AACAT,QAAAA,WAAW,CAACU,SAAD,CAAX;AACAR,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAPH,EAQGW,KARH,CAQSC,KAAK,IAAIX,OAAO,CAACW,KAAR,CAAc,uBAAd,EAAuCA,KAAvC,CARlB;AASC;;AACD,QAAGlB,MAAM,CAAC,OAAD,CAAN,IAAiB,UAApB,EACA;AACEU,MAAAA,KAAK,CAAC,+CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAI;AACZ;AACA,cAAMC,SAAS,GAAGC,GAAG,CAACC,eAAJ,CAAoBH,IAApB,CAAlB;AACAT,QAAAA,WAAW,CAACU,SAAD,CAAX;AACAR,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAPD,EAQCW,KARD,CAQOC,KAAK,IAAIX,OAAO,CAACW,KAAR,CAAc,uBAAd,EAAuCA,KAAvC,CARhB;AASD;;AACD,QAAGlB,MAAM,CAAC,OAAD,CAAN,IAAiB,UAApB,EACA;AACEU,MAAAA,KAAK,CAAC,8CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAI;AACZ;AACA,cAAMC,SAAS,GAAGC,GAAG,CAACC,eAAJ,CAAoBH,IAApB,CAAlB;AACAT,QAAAA,WAAW,CAACU,SAAD,CAAX;AACAR,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAPD,EAQCW,KARD,CAQOC,KAAK,IAAIX,OAAO,CAACW,KAAR,CAAc,uBAAd,EAAuCA,KAAvC,CARhB;AASD;AACF,GA9DS,EA8DP,EA9DO,CAAT;AAgED,MAAIC,UAAJ;;AACA,MAAGnB,MAAM,CAAC,OAAD,CAAN,IAAiB,YAApB,EACA;AACEmB,IAAAA,UAAU,gBACV,QAAC,WAAD;AAAA,6BACA,QAAC,OAAD;AAAS,QAAA,YAAY,EAAEpB,YAAvB;AAAA,oEAEE;AACE,UAAA,KAAK,EAAE;AAAEqB,YAAAA,KAAK,EAAE,MAAT;AAAiBC,YAAAA,QAAQ,EAAE,KAA3B;AAAkCC,YAAAA,SAAS,EAAE;AAA7C,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADA;AAWD;;AAEC,MAAGtB,MAAM,CAAC,OAAD,CAAN,IAAiB,aAApB,EACA;AACEmB,IAAAA,UAAU,gBACd,QAAC,WAAD;AAAA,6BACA,QAAC,OAAD;AAAS,QAAA,YAAY,EAAEpB,YAAvB;AAAA,qEAEE;AACE,UAAA,KAAK,EAAE;AAAEqB,YAAAA,KAAK,EAAE,MAAT;AAAiBC,YAAAA,QAAQ,EAAE,KAA3B;AAAkCC,YAAAA,SAAS,EAAE;AAA7C,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADI;AAWD;;AAGD,MAAGtB,MAAM,CAAC,OAAD,CAAN,IAAiB,UAApB,EACA;AACFmB,IAAAA,UAAU,gBACV,QAAC,WAAD;AAAA,6BACA,QAAC,OAAD;AAAS,QAAA,YAAY,EAAEpB,YAAvB;AAAA,oEAEE;AACE,UAAA,KAAK,EAAE;AAAEqB,YAAAA,KAAK,EAAE,MAAT;AAAiBC,YAAAA,QAAQ,EAAE,KAA3B;AAAkCC,YAAAA,SAAS,EAAE;AAA7C,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADA;AAWG;;AAED,sBACE;AAAA,4BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAA,iBACGH,UADH,EAGGd,OAAO,gBACN;AACE,QAAA,KAAK,EAAE;AACLkB,UAAAA,MAAM,EAAE,MADH;AAELC,UAAAA,GAAG,EAAE,KAFA;AAGLC,UAAAA,OAAO,EAAE;AAHJ,SADT;AAAA,+BAOE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEA,YAAAA,OAAO,EAAE;AAAX,WAAT;AAAA,iCACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,cADM,gBAaV;AAAA,kBACEtB,QAAQ,iBAAK;AAAM,UAAA,KAAK,EAAE;AAAC,qBAAS,QAAV;AAAoB,sBAAS;AAA7B,WAAb;AAAoD,UAAA,GAAG,EAAEA,QAAzD;AAAmE,UAAA,GAAG,EAAC;AAAvE;AAAA;AAAA;AAAA;AAAA;AADf;AAAA;AAAA;AAAA;AAAA,cAhBA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AA0BD,CAnJD;;GAAML,iB;UACWrB,S;;;KADXqB,iB;AAqJN,eAAeA,iBAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Navbar2 from \"../../components/Navbar/navbar2\";\r\nimport TM from \"../../common/assets/form.svg\";\r\nimport \"./Features.css\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {fetchBoxPlots} from \"../../services/glassclassificationservices\"\r\nimport {\r\n  HeroBtnWrapper,\r\n  ArrowForward,\r\n  ArrowRight,\r\n} from \"../../components/HeroSection/HeroElements\";\r\nimport { Button } from \"../../components/ButtonElement\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {\r\n  FeaturesRow,\r\n  FeaturesColumn,\r\n  TextWrapper,\r\n  Img,\r\n  TopLine,\r\n  FeaturesSec,\r\n  FeaturesContainer,\r\n  ImgWrapper,\r\n  Table,\r\n  FeatureWrap,\r\n} from \"./Features.elements\";\r\nimport Collapse from \"rc-collapse\";\r\nvar Panel = Collapse.Panel;\r\nrequire(\"rc-collapse/assets/index.css\");\r\n\r\nconst CreateNewContract = ({ lightTopLine }) => {\r\n  const params = useParams();\r\n  const [hover, setHover] = useState(false);\r\n  const [imageSrc, setImageSrc] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  console.log(\"param details\", params[\"param\"]);\r\n  const onHover = () => {\r\n    setHover(!hover);\r\n  };\r\n\r\n useEffect(() => {\r\n  // Fetch image from the server\r\n  if(params[\"param\"]=='pairplots')\r\n  {\r\n  fetch('http://localhost:8001/ml/boxplot')\r\n    .then(response => response.blob())\r\n    .then(blob => {\r\n      // Convert the Blob to a data URL\r\n      const objectURL = URL.createObjectURL(blob);\r\n      setImageSrc(objectURL);\r\n      setLoading(false);\r\n    })\r\n    .catch(error => console.error('Error fetching image:', error));\r\n  }\r\n  if(params[\"param\"]=='heatmaps')\r\n  {\r\n  fetch('http://localhost:8001/ml/boxplot')\r\n    .then(response => response.blob())\r\n    .then(blob => {\r\n      // Convert the Blob to a data URL\r\n      const objectURL = URL.createObjectURL(blob);\r\n      setImageSrc(objectURL);\r\n      setLoading(false);\r\n    })\r\n    .catch(error => console.error('Error fetching image:', error));\r\n  }\r\n  if(params[\"param\"]=='distributionplots')\r\n  {\r\n  fetch('http://localhost:8001/ml/boxplot')\r\n    .then(response => response.blob())\r\n    .then(blob => {\r\n      // Convert the Blob to a data URL\r\n      const objectURL = URL.createObjectURL(blob);\r\n      setImageSrc(objectURL);\r\n      setLoading(false);\r\n    })\r\n    .catch(error => console.error('Error fetching image:', error));\r\n  }\r\n  if(params[\"param\"]=='boxplots')\r\n  {\r\n    fetch('http://localhost:8001/ml/trainconfusionmatrix')\r\n    .then(response => response.blob())\r\n    .then(blob => {\r\n      // Convert the Blob to a data URL\r\n      const objectURL = URL.createObjectURL(blob);\r\n      setImageSrc(objectURL);\r\n      setLoading(false);\r\n    })\r\n    .catch(error => console.error('Error fetching image:', error));\r\n  }\r\n  if(params[\"param\"]=='barplots')\r\n  {\r\n    fetch('http://localhost:8001/ml/testconfusionmatrix')\r\n    .then(response => response.blob())\r\n    .then(blob => {\r\n      // Convert the Blob to a data URL\r\n      const objectURL = URL.createObjectURL(blob);\r\n      setImageSrc(objectURL);\r\n      setLoading(false);\r\n    })\r\n    .catch(error => console.error('Error fetching image:', error));\r\n  }\r\n}, []);\r\n\r\nlet appContent;\r\nif(params[\"param\"]=='testingset')\r\n{\r\n  appContent= \r\n  <FeaturesRow>\r\n  <TopLine lightTopLine={lightTopLine}>\r\n  Confusion Matrix for Testing Set\r\n    <p\r\n      style={{ color: \"grey\", fontSize: \"2vh\", marginTop: \"2vh\" }}\r\n    >\r\n      Visualization using HeatMaps for training set\r\n    </p>\r\n  </TopLine>\r\n  </FeaturesRow>\r\n}\r\n\r\n  if(params[\"param\"]=='trainingset')\r\n  {\r\n    appContent= \r\n<FeaturesRow>\r\n<TopLine lightTopLine={lightTopLine}>\r\n  Confusion Matrix for Training Set\r\n  <p\r\n    style={{ color: \"grey\", fontSize: \"2vh\", marginTop: \"2vh\" }}\r\n  >\r\n   Visualization using HeatMaps for testing set\r\n  </p>\r\n</TopLine>\r\n</FeaturesRow>\r\n  }\r\n\r\n\r\n  if(params[\"param\"]=='accuracy')\r\n  {\r\nappContent= \r\n<FeaturesRow>\r\n<TopLine lightTopLine={lightTopLine}>\r\n  Performance of various ML models\r\n  <p\r\n    style={{ color: \"grey\", fontSize: \"2vh\", marginTop: \"2vh\" }}\r\n  >\r\n   Performance Visualization using  Box Plots for Different models\r\n  </p>\r\n</TopLine>\r\n</FeaturesRow>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar2 />\r\n      <FeaturesSec>\r\n        {appContent}\r\n             \r\n        {loading ? (\r\n          <div\r\n            style={{\r\n              margin: \"auto\",\r\n              top: \"50%\",\r\n              display: \"block\",\r\n            }}\r\n          >\r\n            <Box sx={{ display: \"flex\" }}>\r\n              <CircularProgress />\r\n            </Box>\r\n          </div>\r\n        ) : (\r\n      <div> \r\n      { imageSrc  && <img  style={{\"width\": \"1100px\" ,\"height\":\"1100px\"}}src={imageSrc} alt=\"Class Counts\" />}\r\n    </div>\r\n)}\r\n    </FeaturesSec>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateNewContract;\r\n"]},"metadata":{},"sourceType":"module"}