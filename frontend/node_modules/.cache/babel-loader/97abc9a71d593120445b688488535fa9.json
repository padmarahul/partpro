{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sairahulpadma/Desktop/UNT/SPRING-2024/SDAI/glassclassification-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/sairahulpadma/Desktop/UNT/SPRING-2024/SDAI/glassclassification-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var GLASS_API_URL='http://localhost:8001';export function fetchBoxPlots(){return _fetchBoxPlots.apply(this,arguments);}function _fetchBoxPlots(){_fetchBoxPlots=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"\".concat(GLASS_API_URL,\"/ml/boxplot\"));case 3:response=_context.sent;_context.next=6;return response.json();case 6:data=_context.sent;console.log(data);return _context.abrupt(\"return\",data);case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);console.log(_context.t0);return _context.abrupt(\"return\");case 15:case\"end\":return _context.stop();}}},_callee,null,[[0,11]]);}));return _fetchBoxPlots.apply(this,arguments);}export function fetchPairPlots(){return _fetchPairPlots.apply(this,arguments);}function _fetchPairPlots(){_fetchPairPlots=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return fetch(\"\".concat(GLASS_API_URL,\"/ml/boxplot\"));case 3:response=_context2.sent;_context2.next=6;return response.json();case 6:data=_context2.sent;console.log(data);return _context2.abrupt(\"return\",data);case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);return _context2.abrupt(\"return\");case 15:case\"end\":return _context2.stop();}}},_callee2,null,[[0,11]]);}));return _fetchPairPlots.apply(this,arguments);}","map":{"version":3,"sources":["/Users/sairahulpadma/Desktop/UNT/SPRING-2024/SDAI/glassclassification-frontend/src/services/glassclassificationservices.js"],"names":["GLASS_API_URL","fetchBoxPlots","fetch","response","json","data","console","log","fetchPairPlots"],"mappings":"uYAEA,GAAMA,CAAAA,aAAa,CAAG,uBAAtB,CAIA,eAAsBC,CAAAA,aAAtB,gD,iGAAO,2LAEoBC,CAAAA,KAAK,WACvBF,aADuB,gBAFzB,QAEGG,QAFH,qCAMgBA,CAAAA,QAAQ,CAACC,IAAT,EANhB,QAMGC,IANH,eAOHC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAPG,gCAQIA,IARJ,4DAUHC,OAAO,CAACC,GAAR,cAVG,sG,gDAgBP,eAAsBC,CAAAA,cAAtB,iD,mGAAO,kMAEoBN,CAAAA,KAAK,WACvBF,aADuB,gBAFzB,QAEGG,QAFH,uCAMgBA,CAAAA,QAAQ,CAACC,IAAT,EANhB,QAMGC,IANH,gBAOHC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAPG,iCAQIA,IARJ,+DAUHC,OAAO,CAACC,GAAR,eAVG,yG","sourcesContent":["\n\nconst GLASS_API_URL = 'http://localhost:8001';\n\n\n\nexport async function fetchBoxPlots() {\n  try {\n    const response = await fetch(\n      `${GLASS_API_URL}/ml/boxplot`\n    );\n\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n    return;\n  }\n}\n\n\nexport async function fetchPairPlots() {\n  try {\n    const response = await fetch(\n      `${GLASS_API_URL}/ml/boxplot`\n    );\n\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n    return;\n  }\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}