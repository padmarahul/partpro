{"ast":null,"code":"var _jsxFileName = \"/Users/sairahulpadma/Desktop/UNT/SPRING-2024/SDAI/glassclassification-frontend/src/pages/textClassification/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Navbar2 from \"../../components/Navbar/navbar2\";\nimport TM from \"../../common/assets/form.svg\";\nimport \"./Features.css\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchBoxPlots } from \"../../services/glassclassificationservices\";\nimport { HeroBtnWrapper, ArrowForward, ArrowRight } from \"../../components/HeroSection/HeroElements\";\nimport { Button } from \"../../components/ButtonElement\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Box from \"@mui/material/Box\";\nimport { FeaturesRow, FeaturesColumn, TextWrapper, Img, TopLine, FeaturesSec, FeaturesContainer, ImgWrapper, Table, FeatureWrap } from \"./Features.elements\";\nimport Collapse from \"rc-collapse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar Panel = Collapse.Panel;\n\nrequire(\"rc-collapse/assets/index.css\");\n\nconst TextClassification = ({\n  lightTopLine\n}) => {\n  _s();\n\n  const [text, setText] = useState('');\n  const [submittedText, setSubmittedText] = useState('');\n  const [classification, setClassification] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setSubmittedText(text);\n\n    try {\n      const response = await fetch('http://localhost:8001/ml/classify-text', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          description: text\n        })\n      });\n      const result = await response.json();\n      setClassification(result.class[0]);\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Failed to classify the text.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FeaturesSec, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Glass Type Classification from Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-classification-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"text-input\",\n            value: text,\n            onChange: e => setText(e.target.value),\n            placeholder: \"Enter glass description here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"classify-button\",\n            children: \"Classify\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), submittedText && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"submitted-text\",\n            children: [\"Submitted Description: \", submittedText]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"classification-result\",\n            children: [\"Classification: \", classification]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TextClassification, \"K2dW0cJBjRV25dDhJiVOaiDNlYI=\");\n\n_c = TextClassification;\nexport default TextClassification;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextClassification\");","map":{"version":3,"sources":["/Users/sairahulpadma/Desktop/UNT/SPRING-2024/SDAI/glassclassification-frontend/src/pages/textClassification/index.js"],"names":["React","useState","Navbar2","useEffect","useParams","fetchBoxPlots","HeroBtnWrapper","ArrowForward","ArrowRight","Button","CircularProgress","Box","FeaturesRow","FeaturesColumn","TextWrapper","Img","TopLine","FeaturesSec","FeaturesContainer","ImgWrapper","Table","FeatureWrap","Collapse","Panel","require","TextClassification","lightTopLine","text","setText","submittedText","setSubmittedText","classification","setClassification","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","description","result","json","class","error","console","alert","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Navbar2 from \"../../components/Navbar/navbar2\";\r\nimport TM from \"../../common/assets/form.svg\";\r\nimport \"./Features.css\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchBoxPlots } from \"../../services/glassclassificationservices\"\r\nimport {\r\n  HeroBtnWrapper,\r\n  ArrowForward,\r\n  ArrowRight,\r\n} from \"../../components/HeroSection/HeroElements\";\r\nimport { Button } from \"../../components/ButtonElement\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {\r\n  FeaturesRow,\r\n  FeaturesColumn,\r\n  TextWrapper,\r\n  Img,\r\n  TopLine,\r\n  FeaturesSec,\r\n  FeaturesContainer,\r\n  ImgWrapper,\r\n  Table,\r\n  FeatureWrap,\r\n} from \"./Features.elements\";\r\nimport Collapse from \"rc-collapse\";\r\nvar Panel = Collapse.Panel;\r\nrequire(\"rc-collapse/assets/index.css\");\r\n\r\nconst TextClassification = ({ lightTopLine }) => {\r\n  const [text, setText] = useState('');\r\n  const [submittedText, setSubmittedText] = useState('');\r\n  const [classification, setClassification] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSubmittedText(text);\r\n    try {\r\n      const response = await fetch('http://localhost:8001/ml/classify-text', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ description: text })\r\n      });\r\n\r\n      const result = await response.json();\r\n      setClassification(result.class[0]);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert('Failed to classify the text.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar2 />\r\n      <FeaturesSec>\r\n        <h1>Glass Type Classification from Images</h1>\r\n        <div className=\"text-classification-container\">\r\n          <form onSubmit={handleSubmit}>\r\n            <textarea\r\n              className=\"text-input\"\r\n              value={text}\r\n              onChange={(e) => setText(e.target.value)}\r\n              placeholder=\"Enter glass description here...\"\r\n            />\r\n            <button type=\"submit\" className=\"classify-button\">Classify</button>\r\n          </form>\r\n          {submittedText && (\r\n            <>\r\n             <p className=\"submitted-text\">Submitted Description: {submittedText}</p>\r\n              <p className=\"classification-result\">Classification: {classification}</p>\r\n            </>\r\n                 \r\n          )}\r\n        </div>\r\n\r\n      </FeaturesSec>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextClassification;\r\n"]},"metadata":{},"sourceType":"module"}