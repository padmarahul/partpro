{"ast":null,"code":"// import React from \"react\";\n// import { useState } from \"react\";\n// import { useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import Navbar2 from \"../../components/Navbar/navbar2\";\n// import emptylist from \"../../../src/assets/emptyLoanList.png\";\n// import {\n//   HeroContainer,\n//   HeroBg,\n//   ImageBg,\n//   HeroContent,\n//   HeroH1,\n//   HeroP,\n//   HeroBtnWrapper,\n//   ArrowForward,\n//   ArrowRight,\n// } from \"../../components/HeroSection/HeroElements\";\n// import { Button } from \"../../components/ButtonElement\";\n// import TM from \"../../common/assets/form.svg\";\n// import smartContractServices from \"../../services/smartcontractservices\";\n// import CircularProgress from \"@mui/material/CircularProgress\";\n// import Box from \"@mui/material/Box\";\n// import {\n//   FeaturesRow,\n//   FeaturesColumn,\n//   TextWrapper,\n//   Img,\n//   TopLine,\n//   FeaturesSec,\n//   FeaturesContainer,\n//   ImgWrapper,\n//   Table,\n// } from \"./Features.elements\";\n// import e from \"cors\";\n// const CreateContract = ({ lightTopLine }) => {\n//   const params = useParams();\n//   const [hover, setHover] = useState(false);\n//   console.log(\"param details\", params[\"param\"]);\n//   const [loading, setLoading] = useState(true);\n//   const [tp, setTp] = useState([]);\n//   const [ip, setIp] = useState([]);\n//   const [gp, setGp] = useState([]);\n//   const [ep, setEp] = useState([]);\n//   const onHover = () => {\n//     setHover(!hover);\n//   };\n//   if (ep.length != 0) {\n//     for (var i = 0; i < tp.length; i++) {\n//       for (var j = 0; j < ep.length; j++) {\n//         if (ep[j].name === tp[i].name) {\n//           tp[i].value = ep[j].value;\n//           break;\n//         }\n//       }\n//     }\n//   }\n//   const [data, setData] = useState([]);\n//   const getData = () => {\n//     smartContractServices\n//       .getAllParameters(params[\"param\"])\n//       .then((response) => {\n//         console.log(response.data);\n//         setData(response.data);\n//         setLoading((e) => !e);\n//         //getPara(response.data)\n//       })\n//       .catch((error) => {\n//         console.log(error);\n//       });\n//   };\n//   useEffect(() => {\n//     getData();\n//     console.log(data);\n//     console.log(loading);\n//   }, []);\n//   useEffect(() => {\n//     if (data.length !== 0) {\n//       console.log(\"ddd\", data);\n//       var temparray = data.param_records[0].product_versions[0].params;\n//       var newarray = temparray.filter(function (temparr) {\n//         return temparr.level === \"LEVEL_PRODUCT\";\n//       });\n//       setTp(newarray);\n//       var temparray2 = data.param_records[0].product_versions[0].params;\n//       var instancearray = temparray2.filter(function (instarray) {\n//         return instarray.level === \"LEVEL_INSTANCE\";\n//       });\n//       setIp(instancearray);\n//       var globalarray = data.param_records[1].global_parameters;\n//       setGp(globalarray);\n//       var exceltemparray = data.param_records[2].template_params[0];\n//       setEp(exceltemparray);\n//     }\n//   }, [data]);\n//   const CreateSmartButton = (event) => {\n//     event.preventDefault();\n//     const req = {};\n//     const num1 =\n//       data.param_records[0].product_versions[0].display_version_number.major.toString();\n//     const num2 =\n//     data.param_records[0].product_versions[0].display_version_number.minor.toString();\n//     const num3 =\n//     data.param_records[0].product_versions[0].display_version_number.patch.toString();\n//     const text = num1 + \".\" + num2 + \".\" + num3;\n//     var prod = params[\"param\"];\n//     var firstNumber = prod.match(/[0-9]+/);\n//     var num = prod.indexOf(firstNumber);\n//     if (num != -1) {\n//       prod = prod.substring(0, num);\n//     }\n//     console.log(\"nnn\", prod);\n//     req.configparams = {\n//       display_name: prod,\n//       product_id: prod,\n//       version: text,\n//       code: \"code_files/\",\n//     };\n//     var len = data.param_records[0].product_versions[0].params.length;\n//     req.configparams.templateparams = [];\n//     for (var i = 0; i < len; i++) {\n//       req.configparams.templateparams.push({\n//         name:data.param_records[0].product_versions[0].params[i].name,\n//         value: document.getElementById(\"value\" + i).value,\n//       });\n//     }\n//     req.params = data.param_records[0].product_versions[0].params;\n//     for (var i = 0; i < len; i++) {\n//       req.params[i].value = document.getElementById(\"value\" + i).value;\n//     }\n//     console.log(\"rrrr\", req);\n//     smartContractServices\n//       .createSmartContract(req, params[\"param\"])\n//       .then((response) => {\n//         console.log(response.data);\n//         alert(\"Congratulations\" + response.data);\n//       })\n//       .catch((error) => {\n//         console.log(error);\n//         alert(\"Oops we are unable to create the product\");\n//       });\n//   };\n//   return (\n//     <>\n//       <Navbar2 />\n//       <FeaturesSec>\n//         {loading ? (\n//           <div\n//             style={{\n//               margin: \"auto\",\n//               top: \"50%\",\n//               display: \"block\",\n//             }}\n//           >\n//             <Box sx={{ display: \"flex\" }}>\n//               <CircularProgress />\n//             </Box>\n//           </div>\n//         ) : (\n//           <FeaturesContainer>\n//             <FeaturesRow>\n//               <TopLine lightTopLine={lightTopLine}>\n//                 Smart Contract - Savings Product\n//                 <p style={{ color: \"grey\", fontSize: \"2vh\", marginTop: \"2vh\" }}>\n//                   Parameters based on Savings Product\n//                 </p>\n//               </TopLine>\n//               <FeaturesColumn>\n//                 <TextWrapper>\n//                   <Table>\n//                     <caption\n//                       style={{\n//                         color: \"white\",\n//                         marginLeft: \"0%\",\n//                         padding: \"2vh\",\n//                         fontSize: \"5vh\",\n//                       }}\n//                     >\n//                       Global Parameters\n//                     </caption>\n//                     <tbody>\n//                       {gp.map((ge, i) => {\n//                         return (\n//                           <tr key={i}>\n//                             <td\n//                               style={{\n//                                 color: \"white\",\n//                                 padding: \"1vh\",\n//                                 fontSize: \"3vh\",\n//                               }}\n//                             >\n//                               <label>\n//                                 <b>{ge.display_name}</b>\n//                               </label>\n//                             </td>\n//                             {ge.name === \"denomination\" ? (\n//                               <>\n//                                 <td>\n//                                   <input\n//                                     style={{\n//                                       borderRadius: \"6px\",\n//                                       textAlign: \"center\",\n//                                       padding: \"0.7vh\",\n//                                       marginLeft: \"1vh\",\n//                                     }}\n//                                     type=\"text\"\n//                                     placeholder=\"Enter Value\"\n//                                     name=\"denomination\"\n//                                     id={\"gvalue\" + i}\n//                                     defaultValue={ge.value}\n//                                     required\n//                                   />\n//                                   <br />\n//                                 </td>\n//                               </>\n//                             ) : (\n//                               <>\n//                                 <td>\n//                                   <input\n//                                     style={{\n//                                       borderRadius: \"6px\",\n//                                       textAlign: \"center\",\n//                                       padding: \"0.7vh\",\n//                                       marginLeft: \"1vh\",\n//                                     }}\n//                                     type=\"number\"\n//                                     min=\"0\"\n//                                     step=\"any\"\n//                                     placeholder=\"Enter Value\"\n//                                     name={\"limit\" + i}\n//                                     id={\"gvalue\" + i}\n//                                     defaultValue={0}\n//                                     required\n//                                   />\n//                                   <br />\n//                                 </td>\n//                               </>\n//                             )}\n//                           </tr>\n//                         );\n//                       })}\n//                     </tbody>\n//                   </Table>\n//                   <Table>\n//                     <caption\n//                       style={{\n//                         color: \"white\",\n//                         marginLeft: \"0%\",\n//                         padding: \"2vh\",\n//                         fontSize: \"5vh\",\n//                       }}\n//                     >\n//                       Template Parameters\n//                     </caption>\n//                     <tbody>\n//                       {tp.map((pe, i) => {\n//                         return (\n//                           <tr key={i}>\n//                             <td\n//                               style={{\n//                                 color: \"white\",\n//                                 padding: \"1vh\",\n//                                 fontSize: \"3vh\",\n//                               }}\n//                             >\n//                               <label>\n//                                 <b>{pe.name}</b>\n//                               </label>\n//                             </td>\n//                             {pe.name === \"denomination\" ? (\n//                               <>\n//                                 <td>\n//                                   <input\n//                                     style={{\n//                                       borderRadius: \"6px\",\n//                                       textAlign: \"center\",\n//                                       padding: \"0.7vh\",\n//                                       marginLeft: \"1vh\",\n//                                     }}\n//                                     type=\"text\"\n//                                     placeholder=\"Enter Value\"\n//                                     name=\"denomination\"\n//                                     id={\"value\" + i}\n//                                     defaultValue={pe.value}\n//                                     required\n//                                   />\n//                                   <br />\n//                                 </td>\n//                               </>\n//                             ) : (\n//                               <>\n//                                 <td>\n//                                   <input\n//                                     style={{\n//                                       borderRadius: \"6px\",\n//                                       textAlign: \"center\",\n//                                       padding: \"0.7vh\",\n//                                       marginLeft: \"1vh\",\n//                                     }}\n//                                     type=\"number\"\n//                                     min=\"0\"\n//                                     step=\"any\"\n//                                     placeholder=\"Enter Value\"\n//                                     name={\"limit\" + i}\n//                                     id={\"value\" + i}\n//                                     defaultValue={\n//                                       pe.value === \"\"\n//                                         ? pe.default_value === \"\"\n//                                           ? 0\n//                                           : pe.default_value\n//                                         : pe.value\n//                                     }\n//                                     required\n//                                   />\n//                                   <br />\n//                                 </td>\n//                               </>\n//                             )}\n//                           </tr>\n//                         );\n//                       })}\n//                     </tbody>\n//                   </Table>\n//                   <Table>\n//                     <caption\n//                       style={{\n//                         color: \"white\",\n//                         padding: \"2vh\",\n//                         fontSize: \"5vh\",\n//                       }}\n//                     >\n//                       Instance Parameters\n//                     </caption>\n//                     <tbody>\n//                       {ip.map((ie, i) => {\n//                         return (\n//                           <tr key={i}>\n//                             <td\n//                               style={{\n//                                 color: \"white\",\n//                                 padding: \"1vh\",\n//                                 fontSize: \"3vh\",\n//                               }}\n//                             >\n//                               <label>\n//                                 <b>{ie.name}</b>\n//                               </label>\n//                             </td>\n//                             {ie.name === \"denomination\" ? (\n//                               <>\n//                                 <td>\n//                                   <input\n//                                     style={{\n//                                       borderRadius: \"6px\",\n//                                       textAlign: \"center\",\n//                                       padding: \"0.7vh\",\n//                                       marginLeft: \"1vh\",\n//                                     }}\n//                                     type=\"text\"\n//                                     placeholder=\"Enter Value\"\n//                                     name=\"denomination\"\n//                                     id={\"ivalue\" + i}\n//                                     value={ie.value}\n//                                     required\n//                                   />\n//                                   <br />\n//                                 </td>\n//                               </>\n//                             ) : (\n//                               <>\n//                                 <td>\n//                                   <input\n//                                     style={{\n//                                       borderRadius: \"6px\",\n//                                       textAlign: \"center\",\n//                                       padding: \"0.7vh\",\n//                                       marginLeft: \"1vh\",\n//                                     }}\n//                                     type=\"number\"\n//                                     min=\"0\"\n//                                     step=\"any\"\n//                                     placeholder=\"Enter Value\"\n//                                     name={\"limit\" + i}\n//                                     id={\"ivalue\" + i}\n//                                     value={\n//                                       ie.value === \"\"\n//                                         ? ie.default_value === \"\"\n//                                           ? 0\n//                                           : ie.default_value\n//                                         : ie.value\n//                                     }\n//                                     required\n//                                   />\n//                                   <br />\n//                                 </td>\n//                               </>\n//                             )}\n//                           </tr>\n//                         );\n//                       })}\n//                     </tbody>\n//                   </Table>\n//                 </TextWrapper>\n//                 <HeroBtnWrapper style={{ display: \"inline-block\" }}>\n//                   <Button\n//                     onClick={(event) => CreateSmartButton(event)}\n//                     onMouseEnter={onHover}\n//                     onMouseLeave={onHover}\n//                     primary=\"true\"\n//                     dark=\"true\"\n//                   >\n//                     Create Contract {hover ? <ArrowForward /> : <ArrowRight />}\n//                   </Button>\n//                 </HeroBtnWrapper>\n//               </FeaturesColumn>\n//               <FeaturesColumn>\n//                 <ImgWrapper>\n//                   <Img src={TM} alt=\"car\" />\n//                 </ImgWrapper>\n//               </FeaturesColumn>\n//             </FeaturesRow>\n//           </FeaturesContainer>\n//         )}\n//       </FeaturesSec>\n//     </>\n//   );\n// };\n// export default CreateContract;","map":{"version":3,"sources":["/Users/sairahulpadma/Downloads/smartcontract/smfrontend/frontend-tm-smartcontract/src/pages/createContract/index.js"],"names":[],"mappingssourcesContent":["// import React from \"react\";\r\n// import { useState } from \"react\";\r\n// import { useEffect } from \"react\";\r\n// import { useParams } from \"react-router-dom\";\r\n// import Navbar2 from \"../../components/Navbar/navbar2\";\r\n// import emptylist from \"../../../src/assets/emptyLoanList.png\";\r\n// import {\r\n//   HeroContainer,\r\n//   HeroBg,\r\n//   ImageBg,\r\n//   HeroContent,\r\n//   HeroH1,\r\n//   HeroP,\r\n//   HeroBtnWrapper,\r\n//   ArrowForward,\r\n//   ArrowRight,\r\n// } from \"../../components/HeroSection/HeroElements\";\r\n// import { Button } from \"../../components/ButtonElement\";\r\n// import TM from \"../../common/assets/form.svg\";\r\n// import smartContractServices from \"../../services/smartcontractservices\";\r\n// import CircularProgress from \"@mui/material/CircularProgress\";\r\n// import Box from \"@mui/material/Box\";\r\n// import {\r\n//   FeaturesRow,\r\n//   FeaturesColumn,\r\n//   TextWrapper,\r\n//   Img,\r\n//   TopLine,\r\n//   FeaturesSec,\r\n//   FeaturesContainer,\r\n//   ImgWrapper,\r\n//   Table,\r\n// } from \"./Features.elements\";\r\n// import e from \"cors\";\r\n\r\n// const CreateContract = ({ lightTopLine }) => {\r\n//   const params = useParams();\r\n//   const [hover, setHover] = useState(false);\r\n//   console.log(\"param details\", params[\"param\"]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [tp, setTp] = useState([]);\r\n//   const [ip, setIp] = useState([]);\r\n//   const [gp, setGp] = useState([]);\r\n//   const [ep, setEp] = useState([]);\r\n//   const onHover = () => {\r\n//     setHover(!hover);\r\n//   };\r\n\r\n//   if (ep.length != 0) {\r\n//     for (var i = 0; i < tp.length; i++) {\r\n//       for (var j = 0; j < ep.length; j++) {\r\n//         if (ep[j].name === tp[i].name) {\r\n//           tp[i].value = ep[j].value;\r\n//           break;\r\n//         }\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   const [data, setData] = useState([]);\r\n\r\n//   const getData = () => {\r\n//     smartContractServices\r\n//       .getAllParameters(params[\"param\"])\r\n//       .then((response) => {\r\n//         console.log(response.data);\r\n//         setData(response.data);\r\n//         setLoading((e) => !e);\r\n//         //getPara(response.data)\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(error);\r\n//       });\r\n//   };\r\n//   useEffect(() => {\r\n//     getData();\r\n//     console.log(data);\r\n//     console.log(loading);\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (data.length !== 0) {\r\n//       console.log(\"ddd\", data);\r\n//       var temparray = data.param_records[0].product_versions[0].params;\r\n//       var newarray = temparray.filter(function (temparr) {\r\n//         return temparr.level === \"LEVEL_PRODUCT\";\r\n//       });\r\n//       setTp(newarray);\r\n//       var temparray2 = data.param_records[0].product_versions[0].params;\r\n//       var instancearray = temparray2.filter(function (instarray) {\r\n//         return instarray.level === \"LEVEL_INSTANCE\";\r\n//       });\r\n//       setIp(instancearray);\r\n//       var globalarray = data.param_records[1].global_parameters;\r\n//       setGp(globalarray);\r\n//       var exceltemparray = data.param_records[2].template_params[0];\r\n//       setEp(exceltemparray);\r\n//     }\r\n//   }, [data]);\r\n\r\n//   const CreateSmartButton = (event) => {\r\n//     event.preventDefault();\r\n//     const req = {};\r\n//     const num1 =\r\n//       data.param_records[0].product_versions[0].display_version_number.major.toString();\r\n//     const num2 =\r\n//     data.param_records[0].product_versions[0].display_version_number.minor.toString();\r\n//     const num3 =\r\n//     data.param_records[0].product_versions[0].display_version_number.patch.toString();\r\n//     const text = num1 + \".\" + num2 + \".\" + num3;\r\n//     var prod = params[\"param\"];\r\n//     var firstNumber = prod.match(/[0-9]+/);\r\n//     var num = prod.indexOf(firstNumber);\r\n//     if (num != -1) {\r\n//       prod = prod.substring(0, num);\r\n//     }\r\n//     console.log(\"nnn\", prod);\r\n//     req.configparams = {\r\n//       display_name: prod,\r\n//       product_id: prod,\r\n//       version: text,\r\n//       code: \"code_files/\",\r\n//     };\r\n//     var len = data.param_records[0].product_versions[0].params.length;\r\n//     req.configparams.templateparams = [];\r\n//     for (var i = 0; i < len; i++) {\r\n//       req.configparams.templateparams.push({\r\n//         name:data.param_records[0].product_versions[0].params[i].name,\r\n//         value: document.getElementById(\"value\" + i).value,\r\n//       });\r\n//     }\r\n//     req.params = data.param_records[0].product_versions[0].params;\r\n//     for (var i = 0; i < len; i++) {\r\n//       req.params[i].value = document.getElementById(\"value\" + i).value;\r\n//     }\r\n//     console.log(\"rrrr\", req);\r\n//     smartContractServices\r\n//       .createSmartContract(req, params[\"param\"])\r\n//       .then((response) => {\r\n//         console.log(response.data);\r\n//         alert(\"Congratulations\" + response.data);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(error);\r\n//         alert(\"Oops we are unable to create the product\");\r\n//       });\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Navbar2 />\r\n//       <FeaturesSec>\r\n//         {loading ? (\r\n//           <div\r\n//             style={{\r\n//               margin: \"auto\",\r\n//               top: \"50%\",\r\n//               display: \"block\",\r\n//             }}\r\n//           >\r\n//             <Box sx={{ display: \"flex\" }}>\r\n//               <CircularProgress />\r\n//             </Box>\r\n//           </div>\r\n//         ) : (\r\n//           <FeaturesContainer>\r\n//             <FeaturesRow>\r\n//               <TopLine lightTopLine={lightTopLine}>\r\n//                 Smart Contract - Savings Product\r\n//                 <p style={{ color: \"grey\", fontSize: \"2vh\", marginTop: \"2vh\" }}>\r\n//                   Parameters based on Savings Product\r\n//                 </p>\r\n//               </TopLine>\r\n//               <FeaturesColumn>\r\n//                 <TextWrapper>\r\n//                   <Table>\r\n//                     <caption\r\n//                       style={{\r\n//                         color: \"white\",\r\n//                         marginLeft: \"0%\",\r\n//                         padding: \"2vh\",\r\n//                         fontSize: \"5vh\",\r\n//                       }}\r\n//                     >\r\n//                       Global Parameters\r\n//                     </caption>\r\n//                     <tbody>\r\n//                       {gp.map((ge, i) => {\r\n//                         return (\r\n//                           <tr key={i}>\r\n//                             <td\r\n//                               style={{\r\n//                                 color: \"white\",\r\n//                                 padding: \"1vh\",\r\n//                                 fontSize: \"3vh\",\r\n//                               }}\r\n//                             >\r\n//                               <label>\r\n//                                 <b>{ge.display_name}</b>\r\n//                               </label>\r\n//                             </td>\r\n//                             {ge.name === \"denomination\" ? (\r\n//                               <>\r\n//                                 <td>\r\n//                                   <input\r\n//                                     style={{\r\n//                                       borderRadius: \"6px\",\r\n//                                       textAlign: \"center\",\r\n//                                       padding: \"0.7vh\",\r\n//                                       marginLeft: \"1vh\",\r\n//                                     }}\r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Enter Value\"\r\n//                                     name=\"denomination\"\r\n//                                     id={\"gvalue\" + i}\r\n//                                     defaultValue={ge.value}\r\n//                                     required\r\n//                                   />\r\n//                                   <br />\r\n//                                 </td>\r\n//                               </>\r\n//                             ) : (\r\n//                               <>\r\n//                                 <td>\r\n//                                   <input\r\n//                                     style={{\r\n//                                       borderRadius: \"6px\",\r\n//                                       textAlign: \"center\",\r\n//                                       padding: \"0.7vh\",\r\n//                                       marginLeft: \"1vh\",\r\n//                                     }}\r\n//                                     type=\"number\"\r\n//                                     min=\"0\"\r\n//                                     step=\"any\"\r\n//                                     placeholder=\"Enter Value\"\r\n//                                     name={\"limit\" + i}\r\n//                                     id={\"gvalue\" + i}\r\n//                                     defaultValue={0}\r\n//                                     required\r\n//                                   />\r\n//                                   <br />\r\n//                                 </td>\r\n//                               </>\r\n//                             )}\r\n//                           </tr>\r\n//                         );\r\n//                       })}\r\n//                     </tbody>\r\n//                   </Table>\r\n//                   <Table>\r\n//                     <caption\r\n//                       style={{\r\n//                         color: \"white\",\r\n//                         marginLeft: \"0%\",\r\n//                         padding: \"2vh\",\r\n//                         fontSize: \"5vh\",\r\n//                       }}\r\n//                     >\r\n//                       Template Parameters\r\n//                     </caption>\r\n//                     <tbody>\r\n//                       {tp.map((pe, i) => {\r\n//                         return (\r\n//                           <tr key={i}>\r\n//                             <td\r\n//                               style={{\r\n//                                 color: \"white\",\r\n//                                 padding: \"1vh\",\r\n//                                 fontSize: \"3vh\",\r\n//                               }}\r\n//                             >\r\n//                               <label>\r\n//                                 <b>{pe.name}</b>\r\n//                               </label>\r\n//                             </td>\r\n//                             {pe.name === \"denomination\" ? (\r\n//                               <>\r\n//                                 <td>\r\n//                                   <input\r\n//                                     style={{\r\n//                                       borderRadius: \"6px\",\r\n//                                       textAlign: \"center\",\r\n//                                       padding: \"0.7vh\",\r\n//                                       marginLeft: \"1vh\",\r\n//                                     }}\r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Enter Value\"\r\n//                                     name=\"denomination\"\r\n//                                     id={\"value\" + i}\r\n//                                     defaultValue={pe.value}\r\n//                                     required\r\n//                                   />\r\n//                                   <br />\r\n//                                 </td>\r\n//                               </>\r\n//                             ) : (\r\n//                               <>\r\n//                                 <td>\r\n//                                   <input\r\n//                                     style={{\r\n//                                       borderRadius: \"6px\",\r\n//                                       textAlign: \"center\",\r\n//                                       padding: \"0.7vh\",\r\n//                                       marginLeft: \"1vh\",\r\n//                                     }}\r\n//                                     type=\"number\"\r\n//                                     min=\"0\"\r\n//                                     step=\"any\"\r\n//                                     placeholder=\"Enter Value\"\r\n//                                     name={\"limit\" + i}\r\n//                                     id={\"value\" + i}\r\n//                                     defaultValue={\r\n//                                       pe.value === \"\"\r\n//                                         ? pe.default_value === \"\"\r\n//                                           ? 0\r\n//                                           : pe.default_value\r\n//                                         : pe.value\r\n//                                     }\r\n//                                     required\r\n//                                   />\r\n//                                   <br />\r\n//                                 </td>\r\n//                               </>\r\n//                             )}\r\n//                           </tr>\r\n//                         );\r\n//                       })}\r\n//                     </tbody>\r\n//                   </Table>\r\n\r\n//                   <Table>\r\n//                     <caption\r\n//                       style={{\r\n//                         color: \"white\",\r\n//                         padding: \"2vh\",\r\n//                         fontSize: \"5vh\",\r\n//                       }}\r\n//                     >\r\n//                       Instance Parameters\r\n//                     </caption>\r\n//                     <tbody>\r\n//                       {ip.map((ie, i) => {\r\n//                         return (\r\n//                           <tr key={i}>\r\n//                             <td\r\n//                               style={{\r\n//                                 color: \"white\",\r\n//                                 padding: \"1vh\",\r\n//                                 fontSize: \"3vh\",\r\n//                               }}\r\n//                             >\r\n//                               <label>\r\n//                                 <b>{ie.name}</b>\r\n//                               </label>\r\n//                             </td>\r\n//                             {ie.name === \"denomination\" ? (\r\n//                               <>\r\n//                                 <td>\r\n//                                   <input\r\n//                                     style={{\r\n//                                       borderRadius: \"6px\",\r\n//                                       textAlign: \"center\",\r\n//                                       padding: \"0.7vh\",\r\n//                                       marginLeft: \"1vh\",\r\n//                                     }}\r\n//                                     type=\"text\"\r\n//                                     placeholder=\"Enter Value\"\r\n//                                     name=\"denomination\"\r\n//                                     id={\"ivalue\" + i}\r\n//                                     value={ie.value}\r\n//                                     required\r\n//                                   />\r\n//                                   <br />\r\n//                                 </td>\r\n//                               </>\r\n//                             ) : (\r\n//                               <>\r\n//                                 <td>\r\n//                                   <input\r\n//                                     style={{\r\n//                                       borderRadius: \"6px\",\r\n//                                       textAlign: \"center\",\r\n//                                       padding: \"0.7vh\",\r\n//                                       marginLeft: \"1vh\",\r\n//                                     }}\r\n//                                     type=\"number\"\r\n//                                     min=\"0\"\r\n//                                     step=\"any\"\r\n//                                     placeholder=\"Enter Value\"\r\n//                                     name={\"limit\" + i}\r\n//                                     id={\"ivalue\" + i}\r\n//                                     value={\r\n//                                       ie.value === \"\"\r\n//                                         ? ie.default_value === \"\"\r\n//                                           ? 0\r\n//                                           : ie.default_value\r\n//                                         : ie.value\r\n//                                     }\r\n//                                     required\r\n//                                   />\r\n//                                   <br />\r\n//                                 </td>\r\n//                               </>\r\n//                             )}\r\n//                           </tr>\r\n//                         );\r\n//                       })}\r\n//                     </tbody>\r\n//                   </Table>\r\n//                 </TextWrapper>\r\n//                 <HeroBtnWrapper style={{ display: \"inline-block\" }}>\r\n//                   <Button\r\n//                     onClick={(event) => CreateSmartButton(event)}\r\n//                     onMouseEnter={onHover}\r\n//                     onMouseLeave={onHover}\r\n//                     primary=\"true\"\r\n//                     dark=\"true\"\r\n//                   >\r\n//                     Create Contract {hover ? <ArrowForward /> : <ArrowRight />}\r\n//                   </Button>\r\n//                 </HeroBtnWrapper>\r\n//               </FeaturesColumn>\r\n//               <FeaturesColumn>\r\n//                 <ImgWrapper>\r\n//                   <Img src={TM} alt=\"car\" />\r\n//                 </ImgWrapper>\r\n//               </FeaturesColumn>\r\n//             </FeaturesRow>\r\n//           </FeaturesContainer>\r\n//         )}\r\n//       </FeaturesSec>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default CreateContract;\r\n"]},"metadata":{},"sourceType":"module"}